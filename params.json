{"name":"Zf2-tree-layout-stack","tagline":"TreeLayoutStack is a module for ZF2 allowing the creation of tree layout ","body":"TreeLayoutStack, v1.0\r\n=======\r\n\r\n[![Build Status](https://travis-ci.org/neilime/zf2-tree-layout-stack.png?branch=master)](https://travis-ci.org/neilime/zf2-tree-layout-stack)\r\n[![Latest Stable Version](https://poser.pugx.org/neilime/zf2-tree-layout-stack/v/stable.png)](https://packagist.org/packages/neilime/zf2-tree-layout-stack)\r\n[![Total Downloads](https://poser.pugx.org/neilime/zf2-tree-layout-stack/downloads.png)](https://packagist.org/packages/neilime/zf2-tree-layout-stack)\r\n![Code coverage](https://raw.github.com/zf2-boiler-app/app-test/master/ressources/100%25-code-coverage.png \"100% code coverage\")\r\n\r\nNOTE : If you want to contribute don't hesitate, I'll review any PR.\r\n\r\nIntroduction\r\n------------\r\n\r\nTreeLayoutStack is module for ZF2 allowing the creation of tree layout \r\n\r\nRequirements\r\n------------\r\n\r\n* [Zend Framework 2](https://github.com/zendframework/zf2) (latest master)\r\n\r\nInstallation\r\n------------\r\n\r\n### Main Setup\r\n\r\n#### By cloning project\r\n\r\n1. Clone this project into your `./vendor/` directory.\r\n\r\n#### With composer\r\n\r\n1. Add this project in your composer.json:\r\n\r\n    ```json\r\n    \"require\": {\r\n        \"neilime/zf2-tree-layout-stack\": \"dev-master\"\r\n    }\r\n    ```\r\n2. Now tell composer to download TreeLayoutStack by running the command:\r\n\r\n    ```bash\r\n    $ php composer.phar update\r\n    ```\r\n\r\n#### Post installation\r\n\r\n1. Enabling it in your `application.config.php`file.\r\n\r\n    ```php\r\n    <?php\r\n    return array(\r\n        'modules' => array(\r\n            // ...\r\n            'TreeLayoutStack',\r\n        ),\r\n        // ...\r\n    );\r\n    ```\r\n# How to use _TreeLayoutStack_\r\n\r\n## Simple configuration example\r\n\r\nThis example shows how to define a simple tree layout stack with header and footer parts\r\n\r\n1. After installing skeleton application, install _TreeLayoutStack_ as explained above.\r\n\r\n2. Edit the application module configuration file `module/Application/config/module.config.php`, adding the configuration fragment below:\r\n\t\r\n\t```php\r\n\t<?php\r\n\treturn array(\r\n\t\t//...\r\n\t\t'tree_layout_stack' => array(\r\n\t    \t'layout_tree' => array(\r\n\t\t\t\t'default' => array(\r\n\t\t\t\t\t'template' => 'layout/layout',\r\n\t\t\t\t\t'children' => array(\r\n\t\t\t\t\t\t'header' => 'header/header',\r\n\t\t\t\t\t\t'footer' => 'footer/footer'\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t    ),\r\n\t    //...\r\n\t\t'view_manager' => array(\r\n\t\t\t'template_map' => array(\r\n\t\t\t\t//...\r\n\t\t\t\t'layout/layout' => __DIR__ . '/../view/layout/layout.phtml',\r\n\t\t\t\t'header/logged' => __DIR__ . '/../view/layout/header.phtml',\r\n\t\t\t\t'footer/footer' => __DIR__ . '/../view/layout/footer.phtml'\r\n\t\t\t\t//...\r\n\t\t\t)\r\n\t\t)\r\n\t    //...\r\n\t);\r\n\t\r\n3. Edit layout file `module/Application/view/layout/layout.phtml`, adding header and footer where you want to display them\r\n\t```php\t \r\n\t\t//...\r\n\t\techo $this->header; //Display header part\r\n\t\t//...\r\n\t\t\r\n\t\t//...\r\n\t\techo $this->layout()->content; //Display content part\r\n\t\t//...\r\n\t\t\r\n\t\t//...\r\n\t\techo $this->layout()->footer; //Display footer part\r\n\t\t//...\t\r\n    ```\r\n    \r\n3. Create header and footer view files\r\n\t`module/Application/view/layout/header.phtml`\r\n\t`module/Application/view/layout/footer.phtml`\r\n\r\n5. Save & Resfresh.\r\n\r\n# Configuration\r\n\r\n1. _TreeLayoutStack_ :\r\n\r\n * array `layout_tree`: Define the layout tree, you can define differents tree layout stack, depends on module name, the `default` configuration is used if no template is defined for current module \r\n \r\n2. Module layout tree map (`layout_tree` entry) :\r\n\r\n * string|array|callable template : define the template name\r\n * array children : (optionnal) define children of the template, the configuration is the same as the `layout_tree` entry or `template`\r\n \r\n \r\n## Complexe exemple\r\n\r\nThis example shows all the configuration options available, it assume that `template_map` is properly defined in `view_manager` configuration\r\n\r\n\t```php\r\n\t<?php\r\n\treturn array(\r\n\t\t//...\r\n\t\t'tree_layout_stack' => array(\r\n\t    \t'layout_tree' => array(\r\n\t\t\t\t'default' => array(\r\n\t\t\t\t\t'template' => 'layout/layout',\r\n\t\t\t\t\t'children' => array(\r\n\t\t\t\t\t\t'header' => function(\\Zend\\Mvc\\MvcEvent $oEvent){\r\n\t\t\t\t\t\t\treturn $oEvent->getViewModel()->isLoggedUser?'header/logged':'header/unlogged' // Current MVC event is passed as argument to the callable template\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'footer' => array(\r\n\t\t\t\t\t\t\t'template' => 'footer/footer',\r\n\t\t\t\t\t\t\t'children' => array(\r\n\t\t\t\t\t\t\t\t'social' => 'footer/social',\r\n\t\t\t\t\t\t\t\t'sitemap' => array('SampleClass','SampleFunction') //Sample callback\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t    ),\r\n\t    //...\r\n\t);\r\n\t```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}